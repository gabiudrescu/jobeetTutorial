imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true, enabled: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    port:      %mailer_port%
    delivery_address: %mailer_catchall%
    spool:     { type: memory }

doctrine_migrations:
    dir_name: %kernel.root_dir%/DoctrineMigrations
    namespace: Application\Migrations
    table_name: migration_versions
    name: Application Migrations

vich_uploader:
    db_driver: orm
    mappings:
        companyLogo:
            uri_prefix: /images/logo
            upload_destination: %kernel.root_dir%/../web/images/logo
            delete_on_remove: true
            delete_on_update: true
            namer: vich_uploader.namer_uniqid


easy_admin:
    site_name: 'Jobeet Admin'
    entities:
        Job:
            class: GabiU\JobeetBundle\Entity\Job
            label: 'All jobs'
            list:
                fields:
                    - 'id'
                    - { property: 'logo', type: 'image', base_path: '/images/logo' }
                    - { property: 'position', label: 'Position' }
                    - { property: 'location' }
                    - { property: 'company' }
                    - { property: 'isPublic', label: 'Available via API?' }
                    - { property: 'isActivated', label: 'Has been activated?' }
                actions:
                    - { name: 'show', label: '', icon: 'eye'}
                    - { name: 'edit', label: '', icon: 'plus'}
                    - { name: 'extend', type: 'method', label: 'Extend', icon: 'calendar-plus-o'}
            form:
                fields:
                    - { property: 'Position', help: 'Job title' }
                    - { property: 'location' }
                    - { property: 'company' }
                    - { property: 'description', type: 'ckeditor' }
                    - { property: 'howToApply', type: text }
                    - { property: 'url', type: url, label: 'URL' }
                    - { property: 'logoFile', type: vich_image, label: 'Company logo' }
                    - { property: 'category' }
                    - { property: 'type' }
        Category:
            class: GabiU\JobeetBundle\Entity\Category
            label: 'Job categories'
        Affiliate:
            class: GabiU\JobeetBundle\Entity\Affiliate
            label: 'API Affiliate access'
            list:
                fields:
                    - { property: 'url', label: 'Affiliate URL'}
                    - { property: 'email' }
                    - { property: 'isActive', label: 'Confirmed affiliate?'}
                    - { property: 'categories', type: 'array', label: 'Applied for' }
                actions:
                    - { name: 'activation', type: 'method', label: 'Activate', icon: 'check'}

fos_rest:
    param_fetcher_listener: true
    view:
        view_response_listener: 'force'
        formats:
            xml:  true
            json: true
        templating_formats:
            html: true
    format_listener:
        rules:
            - { path: ^/, priorities: [ html, json, xml ], fallback_format: ~, prefer_extension: true }
    exception:
        codes:
            'Symfony\Component\Routing\Exception\ResourceNotFoundException': 404
            'Doctrine\ORM\OptimisticLockException': HTTP_CONFLICT
        messages:
            'Symfony\Component\Routing\Exception\ResourceNotFoundException': true
    allowed_methods_listener: true
    access_denied_listener:
        json: true
    body_listener: true
    disable_csrf_role: ROLE_API

nelmio_api_doc:
    name: Page API

sensio_framework_extra:
    view: { annotations: false }
    router: { annotations: true }
    request: { converters: true }